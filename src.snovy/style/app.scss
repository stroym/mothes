@use "typography";
@use "component/filter";
@use "component/fancy-item";
@use "component/input";
@use "component/button";
@use "component/editor";
@use "component/sidebar";
@use "component/list";
@use "component/context-menu";
@use "component/tab-menu";
@use "component/form";
@use "component/color-picker";
@use "component/options";
@use "component/combo-box";

@import "mixins";

html, body, #root {
  margin: 0;
  height: 100vh;
  width: 100vw;
}

* {
  box-sizing: border-box;
}

*:disabled {
  cursor: not-allowed !important;
  opacity: 0.75;
}

[disabled],
[data-disabled="true"] {
  cursor: not-allowed !important;
  outline: none !important;
  opacity: 0.75;
}

[data-editable="true"] {
  cursor: text !important;
  user-select: text !important;
}

[data-context="true"] {
  opacity: 0.6;
}

[data-visible="false"] {
  visibility: hidden;
  display: none !important;
}

svg {
  fill: currentColor;
  pointer-events: none;
}

.snovy-inner {
  outline: none !important;
  border: none !important;
}

.snovy-scroll {
  overflow-y: auto;
  overflow-x: hidden;
  scroll-snap-type: y mandatory;
  scrollbar-width: thin;
  scrollbar-color: var(--color-hover) var(--color-active);

  &:is(.invisible) {
    scrollbar-width: none; //TODO draw arrow that scrolls on hover/click when scroll is available

    &::-webkit-scrollbar {
      display: none;
    }
  }

  &::-webkit-scrollbar {
    height: 0.4rem;
    width: 0.4rem;
    background-color: var(--color-hover);
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--color-active);
  }
}

.with-border {
  border-style: solid;
  border-width: 1px;
  border-color: var(--color-border);

  //TODO not ideal
  &:is(.top) {
    border-width: $border-1 0 0 0;
  }

  &:is(.right) {
    border-width: 0 $border-1 0 0;
  }

  &:is(.bottom) {
    border-width: 0 0 $border-1 0;
  }

  &:is(.left) {
    border-width: 0 0 0 $border-1;
  }
}

//TODO optionally keyboard-only-focus, otherwise always?
.styled-focus {
  outline: none;

  [data-whatinput="keyboard"] &:focus-within {
    &,
    .snovy-inner-focus {
      border-radius: var(--border-rad);
      outline: currentColor solid $border-2;
      outline-offset: -$border-1;

      &:is(.styled-hover-fill) {
        background-color: var(--color-focus-fill);
      }
    }
  }

  &:is(.with-border):hover {
    border-radius: var(--border-rad);
  }
}

.styled-hover {
  @extend .styled-focus;

  &:hover {
    outline: currentColor solid $border-2;
    outline-offset: -$border-1;
  }
}

.styled-hover-fill {
  @extend .styled-focus;

  &:not([data-disabled=true], [disabled]):not(.color-item, .snovy-color-button):hover {
    background-color: var(--color-hover) !important;
    //TODO more control needed (sometimes you want to highlight background, sometimes the svg itself)
  }
}

//TODO this should be defined in editor
.milkdown,
.source-view {
  @extend .snovy-scroll;
  scrollbar-gutter: stable;
}

#snovy-app {
  height: 100vh;
  width: 100vw;
  display: grid;
  //grid-template-columns: min-content min-content 5fr min-content min-content;
  grid-template-rows: 100%;
  grid-template-areas: "leftmenu left centre right rightmenu";
}