@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Fira+Code:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

:root {
  --color-main: #282424;
  --color-border: #5f5858;
  --color-focus-fill: teal;
  --color-hover: turquoise;
  --color-active: skyblue;
  --color-text: #f8f8ff;
  --color-text-complementary: #000000;

  --font-smaller: clamp(0.5rem, 0.5rem + 4vw, 1rem);
  --font-small: clamp(1rem, 1rem + 4vw, 1.5rem);
  --font-medium: clamp(1.5rem, 1.5rem + 4vw, 2.5rem);
  --font-big: clamp(2rem, 2rem + 4vw, 3rem);

  --border-thin: 2px;
  --border-width: 0;

  --rad-round: 2rem;
  --rad-rounded: 0.4rem;
}

html, body {
  margin: 0;
  box-sizing: border-box;
  color: var(--color-text);
}

#snovy-app {
  box-sizing: border-box;
  height: 100svh;
  width: 100vw;
  display: grid;
  grid-template-columns: auto auto 1fr auto auto;
  grid-template-rows: 100%;
  grid-template-areas: "left-menu left centre right right-menu";
  grid-gap: var(--border-thin);
  background-color: var(--color-border);
  justify-content: start;

  & * {
    font-family: "Roboto", "Montserrat", sans-serif;
    border-color: var(--color-border);
    border-style: solid;
    border-width: var(--border-width);
  }

  & > * {
    background-color: var(--color-main);
  }
}

.color-pass {
  background-color: var(--color-border);
}

.color-pass > * {
  background-color: var(--color-main);
}

[data-selected = "true"] {
  //TODO use hsl and calc to darken --color-active?
  background-color: deepskyblue;
}

[data-active = "true"] {
  background-color: var(--color-active)
}

*:disabled {
  cursor: not-allowed !important;
  opacity: 0.75;
}

[disabled],
[data-disabled="true"] {
  outline: none !important;
  cursor: not-allowed !important;
  opacity: 0.75;
}

[data-editable="true"] {
  cursor: text !important;
  user-select: text !important;
}

[data-context="true"] {
  opacity: 0.6;
}

[data-collapsed="true"] {
  display: none !important;
  visibility: collapse;
}

.svg-wrapper {
  display: grid;
  place-content: center;
  aspect-ratio: 1 / 1;
}

svg {
  fill: currentColor;
  pointer-events: none;
  height: 100%;
  width: 100%;
}

.snovy-inner {
  border: none !important;
  outline: none !important;
}

.snovy-scroll {
  overflow-x: hidden;
  overflow-y: auto;
  scroll-snap-type: y mandatory;
  scrollbar-width: thin;
  scrollbar-color: var(--color-hover) var(--color-active);

  &:is(.invisible) {
    scrollbar-width: none;
    //TODO draw arrow that scrolls on hover/click when scroll is available

    &::-webkit-scrollbar {
      display: none;
    }
  }

  &::-webkit-scrollbar {
    width: 0.4rem;
    height: 0.4rem;
    background-color: var(--color-hover);
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--color-active);
  }
}

//TODO optionally keyboard-only-focus, otherwise always?
.styled-focus {
  outline: none;

  [data-whatinput="keyboard"] &:focus-within {
    &,
    .snovy-inner-focus {
      border-radius: var(--border-rad);
      outline: currentColor solid var(--border-width);
      outline-offset: calc(var(--border-width) / -2);

      &:is(.styled-hover-fill) {
        background-color: var(--color-focus-fill);
      }
    }
  }

  &:is(.with-border):hover {
    border-radius: var(--border-rad);
  }
}

.styled-hover {
  @extend .styled-focus;

  &:hover {
    outline: currentColor solid var(--border-width);
    outline-offset: calc(var(--border-width) / -2);
  }
}

.styled-hover-fill {
  @extend .styled-focus;

  &:not([data-disabled=true], [disabled]):not(.color-item, .snovy-color-button):hover {
    background-color: var(--color-hover) !important;
    //TODO more control needed (sometimes you want to highlight background, sometimes the svg itself)
  }
}
